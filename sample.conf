; Sample Taskmaster config file.

[Taskmaster]
logfile=/tmp/taskmaster.log ; (main log file;default $CWD/supervisord.log)

[program:progOne]
command=tail -f README			; the program (relative uses PATH, can take args)
process_name=(program_name)		; process_name expr (default %(program_name)s)
numprocs=1						; number of processes copies to start (default 1)
directory=.						; directory to cwd to before exec (default .)
umask=022						; umask for process (default 022)
autostart=true					; start at supervisord start (default: true)
autorestart=unexpected			; unexpected/allthetime/never to restart (default: never)
stopwaitsecs=1					; number of secs prog must stay running (def. 1)
startretries=3					; max # of serial start failures (default 3)
exitcodes=4						; 'expected' exit codes for process (default 0,2)
startsuccesstime=3				; in seconde (default 0)
;stopsignal=SIGKILL             ; signal used to kill process (default SIGKILL)
;stopwaitsecs=10				; max num secs to wait b4 SIGKILL (default 10)
stdout_logfile=logFileTwo       ; stdout log path, NONE for none; (default /tmp/stdoutLog)
redirect_stderr=true			; redirect proc stderr to stdout (default false)
;stderr_logfile=logErrOne		; stderr log path, NONE for none;
;environment=					; process environment additions

[program:progTwo]
command=echo $BABA				; the program (relative uses PATH, can take args)
process_name=(program_name)		; process_name expr (default %(program_name)s)
numprocs=3						; number of processes copies to start (default 1)
directory=.						; directory to cwd to before exec (default .)
umask=022						; umask for process (default 022)
autostart=false					; start at supervisord start (default: true)
autorestart=unexpected			; unexpected/allthetime/never to restart (default: never)
stopwaitsecs=1					; number of secs prog must stay running (def. 1)
startretries=3					; max # of serial start failures (default 3)
exitcodes=0,1,2					; 'expected' exit codes for process (default 0,2)
startsuccesstime=3				; in seconde (default 0)
;stopsignal=SIGKILL             ; signal used to kill process (default SIGKILL)
;stopwaitsecs=10				; max num secs to wait b4 SIGKILL (default 10)
;redirect_stderr=true			; redirect proc stderr to stdout (default false)
stdout_logfile=logFileTwo       ; stdout log path, NONE for none; (default /tmp/stdoutLog)
;stderr_logfile=/a/path			; stderr log path, NONE for none;
environment=BABA=98				; process environment additions
